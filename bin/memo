#!/usr/bin/env ruby
# frozen_string_literal: true

$LOAD_PATH.unshift ENV['HOME'] + '/dotfiles/src/lib'

require 'tempfile'

require 'memo/element'
require 'memo/parsing'
require 'memo/query'
require 'memo/shell_printing'

MEMORANDUM_DIR_PATH = File.expand_path(ENV['HOME'] + '/dotfiles/memo')

mfiles = Dir.glob(MEMORANDUM_DIR_PATH + '/**/*.md').map do |file|
  begin
    fp = FilePath.new(file)
    Parsing.new(fp, File.open(file, 'r:utf-8') { |f| f.read }).process
  rescue => err
    STDERR.puts 'parsing error: ' + file
    raise err
  end
end

mfile_list = MarkdownFileList.new(mfiles)
query = Query.new(ARGV)
shell_printing = ShellPrinting.new(mfile_list.search(query.cond), query)

if query.view_setting.editor
  system("#{query.view_setting.editor} #{shell_printing.file_names.join(' ')}")
elsif query.view_setting.stdout
  shell_printing.show(STDOUT)
else
  Tempfile.open(['result', '.md']) do |f|
    shell_printing.show(f)
    f.flush
    system("less -fr #{f.path}")
  end
end
